{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/disco_lu/link-share-pwa/app/api/auth/reset-limits/route.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport { NextResponse } from 'next/server'\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n)\n\nexport async function POST(request: Request) {\n  try {\n    const { email } = await request.json()\n    console.log('Resetting limits for email:', email)\n\n    // Reset rate limits using upsert\n    const { error: rateLimitError } = await supabase\n      .from('email_rate_limits')\n      .upsert({\n        email,\n        last_code_sent_at: new Date().toISOString(),\n        codes_sent_in_last_hour: 0,\n        last_reset_at: new Date().toISOString()\n      }, {\n        onConflict: 'email'\n      })\n\n    if (rateLimitError) {\n      console.error('Error resetting rate limits:', rateLimitError)\n      return NextResponse.json(\n        { error: rateLimitError.message },\n        { status: 500 }\n      )\n    }\n\n    // Mark all active codes as used\n    const { error: codeError } = await supabase\n      .from('email_codes')\n      .update({ used: true })\n      .eq('email', email)\n      .eq('used', false)\n      .gt('expires_at', new Date().toISOString())\n\n    if (codeError) {\n      console.error('Error resetting codes:', codeError)\n      return NextResponse.json(\n        { error: codeError.message },\n        { status: 500 }\n      )\n    }\n\n    return NextResponse.json({ success: true })\n  } catch (error) {\n    console.error('Error in reset-limits API:', error)\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : 'Failed to reset limits' },\n      { status: 500 }\n    )\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD;AAKrB,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,IAAI;QACpC,QAAQ,GAAG,CAAC,+BAA+B;QAE3C,iCAAiC;QACjC,MAAM,EAAE,OAAO,cAAc,EAAE,GAAG,MAAM,SACrC,IAAI,CAAC,qBACL,MAAM,CAAC;YACN;YACA,mBAAmB,IAAI,OAAO,WAAW;YACzC,yBAAyB;YACzB,eAAe,IAAI,OAAO,WAAW;QACvC,GAAG;YACD,YAAY;QACd;QAEF,IAAI,gBAAgB;YAClB,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,eAAe,OAAO;YAAC,GAChC;gBAAE,QAAQ;YAAI;QAElB;QAEA,gCAAgC;QAChC,MAAM,EAAE,OAAO,SAAS,EAAE,GAAG,MAAM,SAChC,IAAI,CAAC,eACL,MAAM,CAAC;YAAE,MAAM;QAAK,GACpB,EAAE,CAAC,SAAS,OACZ,EAAE,CAAC,QAAQ,OACX,EAAE,CAAC,cAAc,IAAI,OAAO,WAAW;QAE1C,IAAI,WAAW;YACb,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,UAAU,OAAO;YAAC,GAC3B;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAAyB,GAC3E;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}