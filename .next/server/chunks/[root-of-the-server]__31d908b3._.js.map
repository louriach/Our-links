{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/disco_lu/link-share-pwa/app/lib/email.ts"],"sourcesContent":["import { Resend } from 'resend'\n\nif (!process.env.RESEND_API_KEY) {\n  throw new Error('RESEND_API_KEY is not set')\n}\n\nconst resend = new Resend(process.env.RESEND_API_KEY)\n\nexport async function sendVerificationEmail(email: string, code: string) {\n  console.log('Attempting to send email to:', email)\n  \n  try {\n    console.log('Creating email with Resend...')\n    const { data, error } = await resend.emails.send({\n      from: 'LinkShare <onboarding@resend.dev>',\n      to: email,\n      subject: 'Your verification code for LinkShare',\n      html: `\n        <div style=\"font-family: sans-serif; max-width: 600px; margin: 0 auto;\">\n          <h1 style=\"color: #1a1a1a; text-align: center;\">Your verification code</h1>\n          <p style=\"color: #444; font-size: 16px;\">Here's your verification code for LinkShare:</p>\n          <div style=\"background: #f4f4f4; padding: 16px; border-radius: 4px; text-align: center; font-size: 24px; font-weight: bold; margin: 16px 0;\">\n            ${code}\n          </div>\n          <p style=\"color: #444; font-size: 16px;\">This code will expire in 15 minutes. If you didn't request this code, you can safely ignore this email.</p>\n        </div>\n      `,\n    })\n\n    if (error) {\n      console.error('Resend API error:', error)\n      throw error\n    }\n\n    console.log('Resend API response:', data)\n    return data\n  } catch (error) {\n    console.error('Error in sendVerificationEmail:', error)\n    if (error instanceof Error) {\n      console.error('Error details:', {\n        name: error.name,\n        message: error.message,\n        stack: error.stack\n      })\n    }\n    throw error\n  }\n} "],"names":[],"mappings":";;;AAAA;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;IAC/B,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,SAAS,IAAI,0IAAA,CAAA,SAAM,CAAC,QAAQ,GAAG,CAAC,cAAc;AAE7C,eAAe,sBAAsB,KAAa,EAAE,IAAY;IACrE,QAAQ,GAAG,CAAC,gCAAgC;IAE5C,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,MAAM,CAAC,IAAI,CAAC;YAC/C,MAAM;YACN,IAAI;YACJ,SAAS;YACT,MAAM,CAAC;;;;;YAKD,EAAE,KAAK;;;;MAIb,CAAC;QACH;QAEA,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,qBAAqB;YACnC,MAAM;QACR;QAEA,QAAQ,GAAG,CAAC,wBAAwB;QACpC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,KAAK,CAAC,kBAAkB;gBAC9B,MAAM,MAAM,IAAI;gBAChB,SAAS,MAAM,OAAO;gBACtB,OAAO,MAAM,KAAK;YACpB;QACF;QACA,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///Users/disco_lu/link-share-pwa/app/api/auth/generate-code/route.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport { cookies } from 'next/headers'\nimport { NextResponse } from 'next/server'\nimport { sendVerificationEmail } from '@/app/lib/email'\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n)\n\nfunction generateRandomCode(length: number): string {\n  const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'\n  let result = ''\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length))\n  }\n  return result\n}\n\nexport async function POST(request: Request) {\n  try {\n    console.log('Generate code API called')\n    const { email, override } = await request.json()\n    console.log('Email received:', email)\n\n    // If override is true, skip rate limiting\n    if (override) {\n      console.log('Rate limiting overridden')\n    } else {\n      // Check rate limits using the database function\n      console.log('Checking rate limits...')\n      const { data: isAllowed, error: rateLimitError } = await supabase\n        .rpc('check_email_rate_limit', {\n          email_address: email\n        })\n\n      if (rateLimitError) {\n        console.error('Error checking rate limits:', rateLimitError)\n        return NextResponse.json(\n          { error: rateLimitError.message },\n          { status: 500 }\n        )\n      }\n\n      if (!isAllowed) {\n        console.log('Rate limit exceeded')\n        return NextResponse.json(\n          { error: 'Too many code requests. Please wait before requesting another code.' },\n          { status: 429 }\n        )\n      }\n    }\n\n    // Check active codes\n    console.log('Checking active codes...')\n    const { data: activeCodes, error: activeCodesError } = await supabase\n      .from('email_codes')\n      .select('*')\n      .eq('email', email)\n      .eq('used', false)\n      .gt('expires_at', new Date().toISOString())\n\n    if (activeCodesError) {\n      console.error('Error checking active codes:', activeCodesError)\n      return NextResponse.json(\n        { error: activeCodesError.message },\n        { status: 500 }\n      )\n    }\n\n    if (activeCodes && activeCodes.length >= 3) {\n      console.log('Too many active codes')\n      return NextResponse.json(\n        { error: 'You have too many active codes. Please use an existing code or wait for it to expire.' },\n        { status: 429 }\n      )\n    }\n\n    // Generate and insert the new code\n    console.log('Generating new code...')\n    const code = generateRandomCode(12)\n    const expiresAt = new Date(Date.now() + 15 * 60 * 1000) // 15 minutes from now\n    console.log('Code generated:', { code, expiresAt })\n\n    const { data: insertedCode, error: insertError } = await supabase\n      .from('email_codes')\n      .insert({\n        email,\n        code,\n        expires_at: expiresAt.toISOString()\n      })\n      .select()\n      .single()\n\n    if (insertError) {\n      console.error('Error inserting code:', insertError)\n      return NextResponse.json(\n        { error: insertError.message },\n        { status: 500 }\n      )\n    }\n\n    console.log('Code inserted successfully:', insertedCode)\n\n    // Send the code via email\n    try {\n      console.log('Attempting to send email...')\n      await sendVerificationEmail(email, code)\n      console.log('Email sent successfully')\n    } catch (emailError) {\n      console.error('Error sending email:', emailError)\n      if (emailError instanceof Error) {\n        console.error('Email error details:', {\n          name: emailError.name,\n          message: emailError.message,\n          stack: emailError.stack\n        })\n      }\n      return NextResponse.json(\n        { error: 'Failed to send email' },\n        { status: 500 }\n      )\n    }\n\n    return NextResponse.json({ success: true })\n  } catch (error) {\n    console.error('Error in generate-code API:', error)\n    if (error instanceof Error) {\n      console.error('API error details:', {\n        name: error.name,\n        message: error.message,\n        stack: error.stack\n      })\n    }\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : 'Failed to generate code' },\n      { status: 500 }\n    )\n  }\n} "],"names":[],"mappings":"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","debugId":null}}]
}