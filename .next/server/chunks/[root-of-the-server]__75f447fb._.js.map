{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///Users/disco_lu/link-share-pwa/app/lib/email-templates/verification-code.tsx"],"sourcesContent":["import {\n  Body,\n  Container,\n  Head,\n  Heading,\n  Html,\n  Preview,\n  Text,\n} from '@react-email/components'\nimport * as React from 'react'\n\ninterface VerificationEmailProps {\n  code: string\n}\n\nexport const VerificationEmail = ({\n  code,\n}: VerificationEmailProps) => {\n  return (\n    <Html>\n      <Head />\n      <Preview>Your verification code for LinkShare</Preview>\n      <Body style={main}>\n        <Container style={container}>\n          <Heading style={h1}>Your verification code</Heading>\n          <Text style={text}>\n            Here's your verification code for LinkShare:\n          </Text>\n          <Text style={codeStyle}>{code}</Text>\n          <Text style={text}>\n            This code will expire in 15 minutes. If you didn't request this code, you can safely ignore this email.\n          </Text>\n        </Container>\n      </Body>\n    </Html>\n  )\n}\n\nconst main = {\n  backgroundColor: '#ffffff',\n  fontFamily:\n    '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif',\n}\n\nconst container = {\n  margin: '0 auto',\n  padding: '20px 0 48px',\n  maxWidth: '560px',\n}\n\nconst h1 = {\n  color: '#1a1a1a',\n  fontSize: '24px',\n  fontWeight: '600',\n  lineHeight: '1.25',\n  padding: '16px 0',\n  textAlign: 'center' as const,\n}\n\nconst text = {\n  color: '#444',\n  fontSize: '16px',\n  lineHeight: '24px',\n  textAlign: 'left' as const,\n}\n\nconst codeStyle = {\n  background: '#f4f4f4',\n  borderRadius: '4px',\n  color: '#1a1a1a',\n  display: 'block',\n  fontSize: '24px',\n  fontWeight: 'bold',\n  lineHeight: '1.4',\n  margin: '16px 0',\n  padding: '16px',\n  textAlign: 'center' as const,\n}\n\nexport default VerificationEmail "],"names":[],"mappings":";;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAeO,MAAM,oBAAoB,CAAC,EAChC,IAAI,EACmB;IACvB,qBACE,gPAAC,4JAAA,CAAA,OAAI;;0BACH,gPAAC,4JAAA,CAAA,OAAI;;;;;0BACL,gPAAC,+JAAA,CAAA,UAAO;0BAAC;;;;;;0BACT,gPAAC,4JAAA,CAAA,OAAI;gBAAC,OAAO;0BACX,cAAA,gPAAC,iKAAA,CAAA,YAAS;oBAAC,OAAO;;sCAChB,gPAAC,+JAAA,CAAA,UAAO;4BAAC,OAAO;sCAAI;;;;;;sCACpB,gPAAC,4JAAA,CAAA,OAAI;4BAAC,OAAO;sCAAM;;;;;;sCAGnB,gPAAC,4JAAA,CAAA,OAAI;4BAAC,OAAO;sCAAY;;;;;;sCACzB,gPAAC,4JAAA,CAAA,OAAI;4BAAC,OAAO;sCAAM;;;;;;;;;;;;;;;;;;;;;;;AAO7B;AAEA,MAAM,OAAO;IACX,iBAAiB;IACjB,YACE;AACJ;AAEA,MAAM,YAAY;IAChB,QAAQ;IACR,SAAS;IACT,UAAU;AACZ;AAEA,MAAM,KAAK;IACT,OAAO;IACP,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,SAAS;IACT,WAAW;AACb;AAEA,MAAM,OAAO;IACX,OAAO;IACP,UAAU;IACV,YAAY;IACZ,WAAW;AACb;AAEA,MAAM,YAAY;IAChB,YAAY;IACZ,cAAc;IACd,OAAO;IACP,SAAS;IACT,UAAU;IACV,YAAY;IACZ,YAAY;IACZ,QAAQ;IACR,SAAS;IACT,WAAW;AACb;uCAEe","debugId":null}},
    {"offset": {"line": 234, "column": 0}, "map": {"version":3,"sources":["file:///Users/disco_lu/link-share-pwa/app/lib/email.ts"],"sourcesContent":["import { Resend } from 'resend'\nimport { VerificationEmail } from './email-templates/verification-code'\n\nif (!process.env.RESEND_API_KEY) {\n  throw new Error('RESEND_API_KEY is not set')\n}\n\nconst resend = new Resend(process.env.RESEND_API_KEY)\n\nexport async function sendVerificationEmail(email: string, code: string) {\n  console.log('Attempting to send email to:', email)\n  console.log('Using Resend API key:', process.env.RESEND_API_KEY ? 'Present' : 'Missing')\n  \n  try {\n    console.log('Creating email with Resend...')\n    const { data, error } = await resend.emails.send({\n      from: 'LinkShare <onboarding@resend.dev>', // Using the default Resend domain for testing\n      to: email,\n      subject: 'Your verification code for LinkShare',\n      react: VerificationEmail({ code }),\n    })\n\n    if (error) {\n      console.error('Resend API error:', error)\n      throw error\n    }\n\n    console.log('Resend API response:', data)\n    return data\n  } catch (error) {\n    console.error('Error in sendVerificationEmail:', error)\n    if (error instanceof Error) {\n      console.error('Error details:', {\n        name: error.name,\n        message: error.message,\n        stack: error.stack\n      })\n    }\n    throw error\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;IAC/B,MAAM,IAAI,MAAM;AAClB;AAEA,MAAM,SAAS,IAAI,0IAAA,CAAA,SAAM,CAAC,QAAQ,GAAG,CAAC,cAAc;AAE7C,eAAe,sBAAsB,KAAa,EAAE,IAAY;IACrE,QAAQ,GAAG,CAAC,gCAAgC;IAC5C,QAAQ,GAAG,CAAC,yBAAyB,QAAQ,GAAG,CAAC,cAAc,GAAG,YAAY;IAE9E,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,OAAO,MAAM,CAAC,IAAI,CAAC;YAC/C,MAAM;YACN,IAAI;YACJ,SAAS;YACT,OAAO,CAAA,GAAA,2JAAA,CAAA,oBAAiB,AAAD,EAAE;gBAAE;YAAK;QAClC;QAEA,IAAI,OAAO;YACT,QAAQ,KAAK,CAAC,qBAAqB;YACnC,MAAM;QACR;QAEA,QAAQ,GAAG,CAAC,wBAAwB;QACpC,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,mCAAmC;QACjD,IAAI,iBAAiB,OAAO;YAC1B,QAAQ,KAAK,CAAC,kBAAkB;gBAC9B,MAAM,MAAM,IAAI;gBAChB,SAAS,MAAM,OAAO;gBACtB,OAAO,MAAM,KAAK;YACpB;QACF;QACA,MAAM;IACR;AACF","debugId":null}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file:///Users/disco_lu/link-share-pwa/app/api/auth/generate-code/route.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport { NextResponse } from 'next/server'\nimport { sendVerificationEmail } from '@/app/lib/email'\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.SUPABASE_SERVICE_ROLE_KEY!\n)\n\nexport async function POST(request: Request) {\n  try {\n    console.log('Generate code API called')\n    const { email } = await request.json()\n    console.log('Email received:', email)\n\n    // Generate the code using our database function\n    const { data, error: generateError } = await supabase\n      .rpc('generate_email_code', { email_address: email })\n\n    if (generateError) {\n      console.error('Error generating code:', generateError)\n      return NextResponse.json(\n        { error: generateError.message },\n        { status: 500 }\n      )\n    }\n\n    if (!data) {\n      console.error('No code generated')\n      return NextResponse.json(\n        { error: 'Failed to generate code' },\n        { status: 500 }\n      )\n    }\n\n    console.log('Code generated:', data)\n\n    // Send the code via email\n    try {\n      await sendVerificationEmail(email, data)\n      console.log('Email sent successfully')\n    } catch (emailError) {\n      console.error('Error sending email:', emailError)\n      return NextResponse.json(\n        { error: 'Failed to send email' },\n        { status: 500 }\n      )\n    }\n\n    return NextResponse.json({ success: true })\n  } catch (error) {\n    console.error('Error in generate-code API:', error)\n    return NextResponse.json(\n      { error: error instanceof Error ? error.message : 'Failed to generate code' },\n      { status: 500 }\n    )\n  }\n} "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,gFAE1B,QAAQ,GAAG,CAAC,yBAAyB;AAGhC,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,QAAQ,GAAG,CAAC;QACZ,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,QAAQ,IAAI;QACpC,QAAQ,GAAG,CAAC,mBAAmB;QAE/B,gDAAgD;QAChD,MAAM,EAAE,IAAI,EAAE,OAAO,aAAa,EAAE,GAAG,MAAM,SAC1C,GAAG,CAAC,uBAAuB;YAAE,eAAe;QAAM;QAErD,IAAI,eAAe;YACjB,QAAQ,KAAK,CAAC,0BAA0B;YACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,cAAc,OAAO;YAAC,GAC/B;gBAAE,QAAQ;YAAI;QAElB;QAEA,IAAI,CAAC,MAAM;YACT,QAAQ,KAAK,CAAC;YACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,QAAQ,GAAG,CAAC,mBAAmB;QAE/B,0BAA0B;QAC1B,IAAI;YACF,MAAM,CAAA,GAAA,qHAAA,CAAA,wBAAqB,AAAD,EAAE,OAAO;YACnC,QAAQ,GAAG,CAAC;QACd,EAAE,OAAO,YAAY;YACnB,QAAQ,KAAK,CAAC,wBAAwB;YACtC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAuB,GAChC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAK;IAC3C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAA0B,GAC5E;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}