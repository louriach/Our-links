{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///Users/disco_lu/link-share-pwa/app/lib/supabase.ts"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\n\nif (!process.env.NEXT_PUBLIC_SUPABASE_URL) {\n  throw new Error('Missing env.NEXT_PUBLIC_SUPABASE_URL')\n}\nif (!process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n  throw new Error('Missing env.NEXT_PUBLIC_SUPABASE_ANON_KEY')\n}\n\nconsole.log('Initializing Supabase client with URL:', process.env.NEXT_PUBLIC_SUPABASE_URL)\n\nexport const supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY,\n  {\n    auth: {\n      persistSession: true,\n      autoRefreshToken: true,\n      detectSessionInUrl: true\n    }\n  }\n) "],"names":[],"mappings":";;;AAAA;;AAEA,uCAA2C;;AAE3C;AACA,uCAAgD;;AAEhD;AAEA,QAAQ,GAAG,CAAC;AAEL,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,sUAGjC;IACE,MAAM;QACJ,gBAAgB;QAChB,kBAAkB;QAClB,oBAAoB;IACtB;AACF","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///Users/disco_lu/link-share-pwa/app/auth/reset-password/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { useRouter } from 'next/navigation'\nimport { supabase } from '@/app/lib/supabase'\nimport Link from 'next/link'\n\nexport default function ResetPasswordPage() {\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [success, setSuccess] = useState(false)\n  const router = useRouter()\n\n  const handleResetPassword = async (e: React.FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n    setError(null)\n    setSuccess(false)\n\n    // Validate passwords match\n    if (password !== confirmPassword) {\n      setError('Passwords do not match')\n      setIsLoading(false)\n      return\n    }\n\n    try {\n      const { error } = await supabase.auth.updateUser({\n        password: password\n      })\n\n      if (error) {\n        throw error\n      }\n\n      setSuccess(true)\n      // Redirect to login page after 2 seconds\n      setTimeout(() => {\n        router.push('/auth/login')\n      }, 2000)\n    } catch (err) {\n      console.error('Error resetting password:', err)\n      setError(err instanceof Error ? err.message : 'Failed to reset password')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Set new password\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Enter your new password below\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleResetPassword}>\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                New Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"New Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"confirm-password\" className=\"sr-only\">\n                Confirm New Password\n              </label>\n              <input\n                id=\"confirm-password\"\n                name=\"confirm-password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Confirm New Password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              />\n            </div>\n          </div>\n\n          {error && (\n            <div className=\"text-red-500 text-sm text-center\">{error}</div>\n          )}\n\n          {success && (\n            <div className=\"text-green-500 text-sm text-center\">\n              Password reset successful! Redirecting to login...\n            </div>\n          )}\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              {isLoading ? (\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <svg\n                    className=\"animate-spin h-5 w-5 text-white\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <circle\n                      className=\"opacity-25\"\n                      cx=\"12\"\n                      cy=\"12\"\n                      r=\"10\"\n                      stroke=\"currentColor\"\n                      strokeWidth=\"4\"\n                    ></circle>\n                    <path\n                      className=\"opacity-75\"\n                      fill=\"currentColor\"\n                      d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n                    ></path>\n                  </svg>\n                </span>\n              ) : null}\n              Reset Password\n            </button>\n          </div>\n\n          <div className=\"text-sm text-center\">\n            <Link href=\"/auth/login\" className=\"font-medium text-indigo-600 hover:text-indigo-500\">\n              Back to login\n            </Link>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n} "],"names":[],"mappings":"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","debugId":null}}]
}